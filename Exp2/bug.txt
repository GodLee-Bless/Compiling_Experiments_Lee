C:\Users\jinx\Compiling_Experiments\Exp2>gcc syntax_tree.tab.c syntax_tree.c lex.yy.c -lfl -ly -o parser
syntax_tree.tab.c: In function 'yyparse':
syntax_tree.tab.c:662:16: warning: implicit declaration of function 'yylex' [-Wimplicit-function-declaration]
 # define YYLEX yylex ()
                ^
syntax_tree.tab.c:1322:16: note: in expansion of macro 'YYLEX'
       yychar = YYLEX;
                ^~~~~
syntax_tree.y: At top level:
syntax_tree.y:74:6: error: conflicting types for 'yyerror'
 void yyerror (char const *s)
      ^~~~~~~
In file included from syntax_tree.y:4:0:
syntax_tree.h:11:6: note: previous declaration of 'yyerror' was here
 void yyerror(char *msg);
      ^~~~~~~
syntax_tree.c: In function 'main':
syntax_tree.c:161:9: warning: implicit declaration of function 'yyrestart' [-Wimplicit-function-declaration]
         yyrestart(f);
         ^~~~~~~~~
syntax_tree.c:162:9: warning: implicit declaration of function 'yyparse' [-Wimplicit-function-declaration]
         yyparse();
         ^~~~~~~
lex.yy.c:116:15: error: expected identifier before '(' token
  */
               ^
syntax_tree.tab.h:72:6: note: in expansion of macro 'BEGIN'
      BEGIN = 281,
      ^~~~~
syntax_tree.l: In function 'yylex':
syntax_tree.l:51:52: error: 'NEQ' undeclared (first use in this function)
 {NEQ} {yylval.type_tnode=newAst("NEQ",0,yylineno);return NEQ;}
                                                    ^~~
syntax_tree.l:51:52: note: each undeclared identifier is reported only once for each function it appears in
syntax_tree.l:55:53: error: 'THEN' undeclared (first use in this function)
 {THEN} {yylval.type_tnode=newAst("THEN",0,yylineno);return THEN;}
                                                     ^~~~
syntax_tree.l:58:59: error: expected expression before ';' token
 {BEGIN} {yylval.type_tnode=newAst("BEGIN",0,yylineno);return BEGIN;}
                                                           ^
syntax_tree.l:59:52: error: 'END' undeclared (first use in this function)
 {END} {yylval.type_tnode=newAst("END",0,yylineno);return END;}
                                                    ^~~